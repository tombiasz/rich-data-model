const UUID4 = require('../uuid4');
const AutogeneratedUUID4 = require('../autogeneratedUuid4');
const Timestamp = require('../timestamp');
const Contact = require('./contact');
const ContactEmail = require('./contactEmail');
const ContactEmailCollection = require('./contactEmailCollection');
const ContactEmailCollectionPolicy = require('./contactEmailCollectionPolicy');
const timeProvider = require('../../utils/timeProvider');

const makeContact = ({
  id,
  ownerId,
  firstName,
  lastName,
  description,
  createdAt,
  updatedAt,
}, policy) => {
  const _id = new UUID4(id);
  const _ownerId = new AutogeneratedUUID4(ownerId);
  const emails = new ContactEmailCollection(timeProvider, policy);
  const _createdAt = new Timestamp(createdAt || timeProvider.now());
  const _updatedAt = new Timestamp(updatedAt || timeProvider.now());

  return new Contact({
    id: _id.value,
    ownerId: _ownerId.value,
    firstName,
    lastName,
    description,
    emails,
    createdAt: _createdAt,
    updatedAt: _updatedAt,
  });
};
const makeStandardContact = data => makeContact(data, new ContactEmailCollectionPolicy(3));
const makePremiumContact = data => makeContact(data, new ContactEmailCollectionPolicy(999));

const makeContactEmail = ({
  emailId,
  isStarred,
  createdAt,
  updatedAt,
}) => {
  const _emailId = new UUID4(emailId);
  const _createdAt = new Timestamp(createdAt || timeProvider.now());
  const _updatedAt = new Timestamp(updatedAt || timeProvider.now());

  return new ContactEmail({
    emailId: _emailId.value,
    isStarred,
    createdAt: _createdAt,
    updatedAt: _updatedAt,
  });
};

module.exports = {
  makeStandardContact,
  makePremiumContact,
  makeContactEmail,
};
